openapi: 3.0.3
info:
  title: Scheduling App API
  description: API for managing events, participants, and time slots.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
paths:
  /events:
    get:
      summary: Get all events
      operationId: getEvents
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create a new event
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /events/{eventId}:
    get:
      summary: Get a specific event
      operationId: getEventById
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

  /participants:
    post:
      summary: Create a new participant
      operationId: createParticipant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantInput'
      responses:
        '201':
          description: Participant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'

  /events/{eventId}/timeSlots:
    post:
      summary: Create a free time slot for an event
      operationId: createFreeTimeSlot
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlotInput'
      responses:
        '201':
          description: Time slot created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlot'

  /events/{eventId}/timeSlots/{timeSlotId}/participants:
    put:
      summary: Add a participant to a time slot
      operationId: addParticipantToTimeSlot
      security:
        - bearerAuth: [ ]    # Add security requirement for bearer token
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
        - name: timeSlotId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantIdInput'
      responses:
        '200':
          description: Participant added to time slot successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event, participant, or time slot not found
        '409':
          description: Conflict in time slot allocation

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        organizer:
          $ref: '#/components/schemas/Participant'
        selectionType:
          type: string
          enum: [ SINGLE, MULTIPLE ]
        timeSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'

    EventInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        organizerId:
          type: integer
        selectionType:
          type: string
          enum: [ SINGLE, MULTIPLE ]

    Participant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        kind:
          type: string
          enum: [ ORGANIZER, GUEST ]

    ParticipantInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        kind:
          type: string
          enum: [ ORGANIZER, GUEST ]

    TimeSlot:
      type: object
      properties:
        id:
          type: integer
        startTime:
          type: string
          format: date-time
        durationInMinutes:
          type: integer
        owner:
          $ref: '#/components/schemas/Participant'

    TimeSlotInput:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        durationInMinutes:
          type: integer

    ParticipantIdInput:
      type: object
      properties:
        participantId:
          type: integer
